{"version":3,"sources":["components/Error.js","components/Formulario.js","components/Pregunta.js","components/Gasto.js","components/Ingreso.js","components/Listado.js","helpers.js","components/ControlPresupuesto.js","components/FormlularioIngresos.js","App.js","reportWebVitals.js","index.js"],"names":["Error","mensaje","className","Formulario","guardarGasto","guardarCrearGasto","useState","nombre","guardarNombre","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","shortid","generate","type","placeholder","value","onChange","target","parseInt","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","Gasto","Ingreso","ingreso","Listado","gastos","ingresos","map","revisarPresupuesto","presupuesto","restante","ControlPresupuesto","FormularioIngresos","App","mostrarpregunta","guardarGastos","creargasto","guardarIngresos","guardarIngreso","crearingreso","guardarCrearIngreso","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68ccd4c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Error = ({mensaje}) => ( \r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n );\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n \r\nexport default Error;","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState(\"\");\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // resetear el form\r\n        guardarNombre(\"\");\r\n        guardarCantidad(0);\r\n\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Gatos aquí</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto incorrecto\"\r\n             /> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10) )}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width button-gasto-submit\"\r\n                value=\"agregar Gasto\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n \r\nFormulario.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import React, {Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n\r\n    // definir el state\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // Función que lee el presupuesto\r\n    const definirPresupuesto = e => {\r\n        guardarCantidad(parseInt(e.target.value, 10))\r\n    }\r\n\r\n    // Submit para definir el presupuesto\r\n    const agregarPresupuesto = e => {\r\n        e.preventDefault();\r\n\r\n        // Validar\r\n        if( cantidad < 1 || isNaN(cantidad) ) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        // si se pasa la validación\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Coloca tu presupuesto inicial</h2>\r\n            \r\n            {error ? <Error mensaje=\"El presupuesto es incorrecto\" /> : null}\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                />\r\n            </form>\r\n        </Fragment>\r\n     );\r\n}\r\n\r\nPregunta.propTypes = {\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Pregunta;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Gasto = ({gasto}) => ( \r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n );\r\n \r\nGasto.propTypes = {\r\n    gasto: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Gasto;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Ingreso = ({ingreso}) => ( \r\n    <li className=\"gastos\">\r\n        <p>\r\n            {ingreso.nombre}\r\n\r\n            <span className=\"ingreso\">$ {ingreso.cantidad}</span>\r\n        </p>\r\n    </li>\r\n );\r\n \r\n Ingreso.propTypes = {\r\n    ingreso: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Ingreso;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types'\r\nimport Ingreso from './Ingreso';\r\n\r\n const Listado = ({gastos, ingresos}) => ( \r\n     <div className=\"gastos-realizados\">\r\n         <h2>Listado</h2>\r\n         {gastos.map(gasto => (\r\n             <Gasto \r\n                key={gasto.id}\r\n                gasto={gasto}\r\n             />\r\n         ))}\r\n\r\n        {ingresos.map(ingreso => (\r\n             <Ingreso \r\n                key={ingreso.id}\r\n                ingreso={ingreso}\r\n             />\r\n         ))}\r\n     </div>\r\n     \r\n  );\r\n \r\n  Listado.propTypes = {\r\n      gastos: PropTypes.array.isRequired\r\n  }\r\n\r\n export default Listado;","export const revisarPresupuesto = (presupuesto, restante) => {\r\n    let clase;\r\n\r\n    if ((presupuesto / 4) > restante) {\r\n        clase = \"alert alert-danger\";\r\n    } else if ((presupuesto / 2) > restante) {\r\n        clase = \"alert alert-warning\";\r\n    } else {\r\n        clase = \"alert alert-success\"\r\n    }\r\n\r\n    return clase;\r\n}","import React, {Fragment} from 'react';\r\nimport {revisarPresupuesto} from '../helpers'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto inicial: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto, restante)}>\r\n                Cartera: $ {restante}\r\n            </div>\r\n        </Fragment>\r\n     );\r\n}\r\n \r\nControlPresupuesto.propTypes = {\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n}\r\n\r\nexport default ControlPresupuesto;","import React, {useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst FormularioIngresos = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const [nombre, guardarNombre] = useState(\"\");\r\n    const [cantidad, guardarCantidad] = useState(0);\r\n    const [error, guardarError] = useState(false);\r\n\r\n    // cuando el usuario agrega un gasto\r\n    const agregarGasto = e => {\r\n        e.preventDefault();\r\n\r\n        // validar\r\n        if(cantidad < 1 || isNaN(cantidad) || nombre.trim() === '') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // construir el gasto\r\n        const gasto = {\r\n            nombre,\r\n            cantidad,\r\n            id: shortid.generate()\r\n        }\r\n\r\n        // pasar el gasto al componente principal\r\n        guardarGasto(gasto);\r\n        guardarCrearGasto(true);\r\n\r\n        // resetear el form\r\n        guardarNombre(\"\");\r\n        guardarCantidad(0);\r\n\r\n    }\r\n\r\n    return ( \r\n        <form\r\n            onSubmit={agregarGasto}\r\n        >\r\n            <h2>Ingresos aquí</h2>\r\n\r\n            {error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto incorrecto\"\r\n             /> : null}\r\n\r\n            <div className=\"campo\">\r\n                <label>Nombre Ingreso</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"campo\">\r\n                <label>Cantidad Ingreso</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value, 10) )}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"agregar Ingreso\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n \r\nFormularioIngresos.propTypes = {\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired\r\n}\r\n\r\nexport default FormularioIngresos;","import React, {useState, useEffect} from 'react';\nimport Formulario from './components/Formulario';\nimport Pregunta from './components/Pregunta';\nimport Listado from './components/Listado';\nimport ControlPresupuesto from './components/ControlPresupuesto';\nimport FormularioIngresos from './components/FormlularioIngresos';\n\n\nfunction App() {\n\n  // definir el state\n  const [presupuesto, guardarPresupuesto] = useState(0);\n  const [restante, guardarRestante] = useState(0);\n  const [mostrarpregunta, actualizarPregunta] = useState(true);\n  const [gastos, guardarGastos] = useState([]);\n  const [gasto, guardarGasto] = useState({});\n  const [creargasto, guardarCrearGasto] = useState(false);\n\n  const [ingresos, guardarIngresos] = useState([]);\n  const [ingreso, guardarIngreso] = useState({});\n  const [crearingreso, guardarCrearIngreso] = useState(false);\n\n  // UseEffect que actualiza el restante\nuseEffect(() => {\n  if(crearingreso) {\n\n    // agrega el nuevo presupuesto\n    guardarIngresos([\n      ...ingresos,\n      ingreso\n    ]);\n\n    // suma al presupuesto actual\n    const presupuestoRestante = restante + ingreso.cantidad;\n\n    guardarRestante(presupuestoRestante);\n\n    // Resetear a false\n    guardarCrearIngreso(false);\n\n  }\n\n  if(creargasto) {\n\n    // agrega el nuevo presupuesto\n    guardarGastos([\n      ...gastos,\n      gasto\n    ]);\n\n    // resta del presupuesto actual\n    const presupuestoRestante = restante - gasto.cantidad;\n\n    // suma del al presupuesto actual\n    // const presupuestoRestante = restante + ingreso.cantidad;\n\n    guardarRestante(presupuestoRestante);\n\n    // Resetear a false\n    guardarCrearGasto(false);\n  }\n}, [ingreso, crearingreso, ingresos, restante, gasto, creargasto, gastos])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Control de Gastos e Ingresos</h1>\n        <div className=\"contenido-principal contenido\">\n          {mostrarpregunta ? \n          (\n            <Pregunta\n            guardarPresupuesto={guardarPresupuesto}\n            guardarRestante={guardarRestante}\n            actualizarPregunta={actualizarPregunta}\n          />\n          ) : (\n            <>\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <FormularioIngresos \n                  guardarGasto={guardarIngreso}\n                  guardarCrearGasto={guardarCrearIngreso}\n                />\n              </div>\n\n              <div className=\"one-half column\">\n                <Formulario \n                  guardarGasto={guardarGasto}\n                  guardarCrearGasto={guardarCrearGasto}\n                />\n              </div>\n                \n            </div>\n\n            <div className=\"row\">\n              <div className=\"two-half column\">\n                <Listado\n                  gastos={gastos}\n                  ingresos={ingresos}\n                />\n                <ControlPresupuesto\n                  presupuesto={presupuesto}\n                  restante={restante}\n                />\n            </div>\n          </div>\n          </>\n            ) \n          }             \n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}